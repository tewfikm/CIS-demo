notes 


ubuntu@ip-10-1-1-9:~$ kubectl apply -f /home/ubuntu/Arcadia_k8S/all_apps.yaml
service/backend created
deployment.apps/backend created
service/main created
deployment.apps/main created
service/app2 created
deployment.apps/app2 created
service/app3 created
deployment.apps/app3 created


ubuntu@ip-10-1-1-9:~$ kubectl apply -f /home/ubuntu/k8s_ingress/full_ingress_arcadia.yaml
namespace/nginx-ingress created
serviceaccount/nginx-ingress created
clusterrole.rbac.authorization.k8s.io/nginx-ingress created
clusterrolebinding.rbac.authorization.k8s.io/nginx-ingress created
secret/default-server-secret created
configmap/nginx-config created
customresourcedefinition.apiextensions.k8s.io/virtualservers.k8s.nginx.org created
customresourcedefinition.apiextensions.k8s.io/virtualserverroutes.k8s.nginx.org created
customresourcedefinition.apiextensions.k8s.io/transportservers.k8s.nginx.org created
secret/gitlab-token-auth created
deployment.apps/nginx-ingress created
service/nginx-ingress created
ingress.extensions/arcadia-ingress created


ubuntu@ip-10-1-1-9:~$ kubectl get nodes
NAME      STATUS   ROLES    AGE   VERSION
kmaster   Ready    master   74d   v1.18.1
knode1    Ready    <none>   74d   v1.18.1
knode2    Ready    <none>   74d   v1.18.1
ubuntu@ip-10-1-1-9:~$ kubectl create secret generic bigip-login -n kube-system --from-literal=username=admin --from-literal=password=Letmein41!
secret/bigip-login created

ubuntu@ip-10-1-1-9:~/CIS-demo/Node Port Mode$ kubectl create serviceaccount k8s-bigip-ctlr-1 -n kube-system
serviceaccount/k8s-bigip-ctlr-1 created


ubuntu@ip-10-1-1-9:~$ kubectl create clusterrolebinding k8s-bigip-ctlr-clusteradmin-1 --clusterrole=cluster-admin --serviceaccount=kube-system:k8s-bigip-ctlr-1
clusterrolebinding.rbac.authorization.k8s.io/k8s-bigip-ctlr-clusteradmin-1 created

git clone -b master https://github.com/tewfikm/CIS-demo.git ~/CIS-demo
git pull

ubuntu@ip-10-1-1-9:~/CIS-demo/Node Port Mode$ kubectl create -f nodeport-deployment.yaml
deployment.apps/k8s-bigip-ctlr-1 created



ubuntu@ip-10-1-1-9:~/CIS-demo/Node Port Mode$ kubectl get deployment k8s-bigip-ctlr-1 --namespace kube-system
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
k8s-bigip-ctlr-1   1/1     1            1           21s

rm -r -I CIS-demo/

ubuntu@ip-10-1-1-9:~/CIS-demo/Node Port Mode$ kubectl create -f deployment-hello-world.yaml
deployment.apps/f5-hello-world-web created
ubuntu@ip-10-1-1-9:~/CIS-demo/Node Port Mode$ kubectl create -f nodeport-service-hello-world.yaml
service/f5-hello-world-web created
ubuntu@ip-10-1-1-9:~/CIS-demo/Node Port Mode$ kubectl create -f ingress-hello-world.yaml
ingress.extensions/f5-hello-world-web created


ubuntu@ip-10-1-1-9:~/CIS-demo/Node Port Mode$ kubectl get pods -o wide
NAME                                  READY   STATUS    RESTARTS   AGE    IP             NODE     NOMINATED NODE   READINESS GATES
app2-7bbdd454bb-kp4gk                 1/1     Running   0          107m   10.244.1.118   knode1   <none>           <none>
app3-77cb588b5-wzxsw                  1/1     Running   0          107m   10.244.2.141   knode2   <none>           <none>
backend-5456658688-xcld2              1/1     Running   0          107m   10.244.2.140   knode2   <none>           <none>
f5-hello-world-web-5cb565dd65-fh2sg   1/1     Running   0          33s    10.244.1.120   knode1   <none>           <none>
f5-hello-world-web-5cb565dd65-gtl7d   1/1     Running   0          33s    10.244.2.143   knode2   <none>           <none>
main-58677fd88f-bn7xc                 1/1     Running   0          107m   10.244.1.117   knode1   <none>           <none>

kubectl describe svc f5-hello-world

kubectl logs k8s-bigip-ctlr-1-5577d848b9-jtwts --namespace kube-system


ubuntu@ip-10-1-1-9:~/CIS-demo/Cluster Mode$ ssh admin@10.1.1.13
Password:
Last login: Wed Jun 24 07:40:12 2020 from 10.1.1.254
admin@(ip-10-1-1-13)(cfg-sync Standalone)(Active)(/Common)(tmos)#
admin@(ip-10-1-1-13)(cfg-sync Standalone)(Active)(/Common)(tmos)# show net tunnels tunnel k8s-tunnel all-properties

-------------------------------------------------
Net::Tunnel: k8s-tunnel
-------------------------------------------------
MAC Address                     02:7a:0d:78:2a:21
Interface Name                         k8s-tunnel

Incoming Discard Packets                    25.7K
Incoming Error Packets                          0
Incoming Unknown Proto Packets                  0
Outgoing Discard Packets                        0
Outgoing Error Packets                       1.3K
HC Incoming Octets                         985.3K
HC Incoming Unicast Packets                 13.2K
HC Incoming Multicast Packets                  14
HC Incoming Broadcast Packets                   0
HC Outgoing Octets                           1.3M
HC Outgoing Unicast Packets                 19.7K
HC Outgoing Multicast Packets                   0
HC Outgoing Broadcast Packets                   0



tshoot

kubectl get pod --namespace=kube-system
 kubectl get pod k8s-bigip-ctlr-2-67bf8d8f87-5z7m6 -o yaml --namespace=kube-system
